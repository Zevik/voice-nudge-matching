// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

// נסה לקרוא מתוך משתני סביבה, אם לא זמינים השתמש בערכים הקבועים
const supabaseUrl = import.meta.env.VITE_SUPABASE_URL || "https://dhakqxhwgaacjneeitew.supabase.co";
const supabaseAnonKey = import.meta.env.VITE_SUPABASE_KEY || "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRoYWtxeGh3Z2FhY2puZWVpdGV3Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDMyODU2MjgsImV4cCI6MjA1ODg2MTYyOH0.7GVIp_s4LW5QyoqTB3-gr-qHnhXfoDfc5IVGyUKjZDI";

if (!supabaseUrl || !supabaseAnonKey) {
  console.error('[Supabase] Missing URL or Key in environment variables');
}

export const supabase = createClient<Database>(supabaseUrl, supabaseAnonKey, {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: true,
    // הגדרות מפורשות לאחסון - שימוש ב-localStorage במקום ב-sessionStorage
    storage: localStorage
  }
});

// הוספת מאזין לשינויי מצב האימות עבור תיעוד ובדיקת המערכת
supabase.auth.onAuthStateChange((event, session) => {
  console.log(`[Auth] State changed: ${event}`, session ? "User is authenticated" : "No active session");
});

// Note: We can't use .on() directly on supabase.from()
// Instead, we need to create a channel for realtime subscriptions
console.log('[Supabase] Client initialized with persistent storage setup');
